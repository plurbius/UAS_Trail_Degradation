# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2025-04-19 13:58:32
"""
import arcpy
from arcpy.sa import *
from arcpy.sa import *
from arcpy.sa import *

def OATCGrade():  # OATCGrade

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("3D")
    arcpy.CheckOutExtension("spatial")

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")
    OATC_TreadCenterline_OATC_TreadCenterline_2_ = "ModelBuilder\\Width\\OATC_TreadCenterline:OATC_TreadCenterline"
    OATCTrail_ElevationToolbox_export_TueAug06141801491880_tif_2_ = arcpy.Raster("Admin\\OATC_Elevation_P_M")

    # Process: Generate Points Along Lines (Generate Points Along Lines) (management)
    OATC_CenterlinePoints_1m = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_CenterlinePoints_1m"
    arcpy.management.GeneratePointsAlongLines(Input_Features=OATC_TreadCenterline_OATC_TreadCenterline_2_, Output_Feature_Class=OATC_CenterlinePoints_1m, Point_Placement="DISTANCE", Distance="1 Meters", Include_End_Points="END_POINTS")

    # Process: Split Line at Point (Split Line at Point) (management)
    OATC_CenterlineSegs_1m = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_CenterlineSegs_1m"
    arcpy.management.SplitLineAtPoint(in_features=OATC_TreadCenterline_OATC_TreadCenterline_2_, point_features=OATC_CenterlinePoints_1m, out_feature_class=OATC_CenterlineSegs_1m, search_radius="0.1 Meters")

    # Process: Export Features (Export Features) (conversion)
    OATC_Grade = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_Grade"
    arcpy.conversion.ExportFeatures(in_features=OATC_CenterlineSegs_1m, out_features=OATC_Grade, field_mapping="FID \"FID\" true true false 4 Long 0 0,First,#,F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_CenterlineSegs_1m,FID,-1,-1;FID_OATC_TreadSmoothed \"FID_OATC_TreadSmoothed\" true true false 4 Long 0 0,First,#,F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_CenterlineSegs_1m,FID_OATC_TreadSmoothed,-1,-1;Shape_Length \"Shape_Length\" false true true 8 Double 0 0,First,#,F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_CenterlineSegs_1m,SHAPE_Length,-1,-1;ORIG_FID \"ORIG_FID\" true true false 0 Long 0 0,First,#,F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_CenterlineSegs_1m,ORIG_FID,-1,-1;ORIG_SEQ \"ORIG_SEQ\" true true false 0 Long 0 0,First,#,F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_CenterlineSegs_1m,ORIG_SEQ,-1,-1")

    # Process: Add Surface Information (Add Surface Information) (sa)
    OATC_Grade_3_ = arcpy.sa.AddSurfaceInformation(OATC_Grade, OATCTrail_ElevationToolbox_export_TueAug06141801491880_tif_2_, ["AVG_SLOPE"], "BILINEAR", None, 1, 0, "")
    .save(Add_Surface_Information)


    # Process: Buffer (Buffer) (analysis)
    OATC_Grade_Buffer = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_Grade_Buffer"
    arcpy.analysis.Buffer(in_features=OATC_Grade_3_, out_feature_class=OATC_Grade_Buffer, buffer_distance_or_field="2 Meters", line_side="FULL", line_end_type="FLAT", dissolve_option="NONE", method="PLANAR")

    # Process: Polygon to Raster (Polygon to Raster) (conversion)
    OATC_Grade_Raster = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC_Grade_Raster"
    with arcpy.EnvManager(cellSize="MAXOF"):
        arcpy.conversion.PolygonToRaster(in_features=OATC_Grade_Buffer, value_field="Avg_Slope", out_rasterdataset=OATC_Grade_Raster, cell_assignment="MAXIMUM_AREA", priority_field="NONE", cellsize="CIMPATH=oatc/oatc_elevation_p_m.json", build_rat="BUILD")

    # Process: Raster to Point (Raster to Point) (conversion)
    OATC_GradePoints = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC\\OATC_GradePoints"
    with arcpy.EnvManager(outputMFlag="Disabled", outputZFlag="Disabled"):
        arcpy.conversion.RasterToPoint(in_raster=OATC_Grade_Raster, out_point_features=OATC_GradePoints, raster_field="VALUE")

    # Process: Kriging (Kriging) (sa)
    OATC_Kriging_Grade = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC_Kriging_Grade"
    Kriging = OATC_Kriging_Grade
    OATC_Grade_Variance = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC_Grade_Variance"
    with arcpy.EnvManager(cellSize="MAXOF", mask="ModelBuilder\\OATC_TreadSmoothed:OATC_TreadSmoothed", snapRaster="OATC_Width:OATC_Width"):
        OATC_Kriging_Grade = arcpy.sa.Kriging(OATC_GradePoints, "grid_code", "Spherical 0.265530 # # #", "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC_Width", "VARIABLE 12", OATC_Grade_Variance)
        OATC_Kriging_Grade.save(Kriging)

        OATC_Grade_Variance = arcpy.Raster(OATC_Grade_Variance)

    # Process: Reclassify (Reclassify) (sa)
    OATC_Grade_John_Reclass_2_ = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC_Grade_John_Reclass"
    Reclassify = OATC_Grade_John_Reclass_2_
    with arcpy.EnvManager(snapRaster="OATC_Width:OATC_Width"):
        OATC_Grade_John_Reclass_2_ = arcpy.sa.Reclassify(OATC_Kriging_Grade, "VALUE", "5.744855 8 1;8 10 2;10 12 3;12 15 4;15 40.938183 5", "DATA")
        OATC_Grade_John_Reclass_2_.save(Reclassify)


if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb", workspace="F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb"):
        OATCGrade()
