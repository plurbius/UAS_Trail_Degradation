# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2025-04-19 13:56:41
"""
import arcpy
from arcpy.ia import *
from arcpy.sa import *
from arcpy.sa import *

def TRIncision():  # TRIncision

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("ImageAnalyst")
    arcpy.CheckOutExtension("3D")

    ToothRidgeTrail_ortho_export_SatAug10153020778787_tif = arcpy.Raster("Admin\\TR_Imagery_P_M")
    TR_StudyArea = "Admin\\TR_StudyArea_Buf_P_M"
    ToothRidgeTrail_ElevationToolbox_export_SatAug10153610933470_tif_2_ = "0.121751766544499"
    OATC = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\OATC"
    Tooth_Ridge = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\Tooth_Ridge"
    ToothRidge_TrailTread_3_ = "TR_TrailTread_P_M1"
    ToothRidgeTrail_ElevationToolbox_export_SatAug10153610933470_tif = arcpy.Raster("TR_Elevation_P_M1")

    # Process: Clip Raster (Clip Raster) (management)
    TR_OrthoClip = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\TR_OrthoClip"
    arcpy.management.Clip(in_raster=ToothRidgeTrail_ortho_export_SatAug10153020778787_tif, rectangle="503122.7588 4035056.2128 503235.2265 4035095.2946", out_raster=TR_OrthoClip, in_template_dataset=TR_StudyArea, clipping_geometry="ClippingGeometry")
    TR_OrthoClip = arcpy.Raster(TR_OrthoClip)

    # Process: Export Features (Export Features) (conversion)
    TR_UnmoddedTerrain = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\TR_UnmoddedTerrain"
    arcpy.conversion.ExportFeatures(in_features=TR_StudyArea, out_features=TR_UnmoddedTerrain, field_mapping="BUFF_DIST \"BUFF_DIST\" true true false 8 Double 0 0,First,#,Admin\\TR_StudyArea_Buf_P_M,BUFF_DIST,-1,-1;ORIG_FID \"ORIG_FID\" true true false 4 Long 0 0,First,#,Admin\\TR_StudyArea_Buf_P_M,ORIG_FID,-1,-1;Shape_Length \"Shape_Length\" false true true 8 Double 0 0,First,#,Admin\\TR_StudyArea_Buf_P_M,Shape_Length,-1,-1;Shape_Area \"Shape_Area\" false true true 8 Double 0 0,First,#,Admin\\TR_StudyArea_Buf_P_M,Shape_Area,-1,-1")

    # Process: Erase (Erase) (analysis)
    TR_UnmoddedClip = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\TR_UnmoddedClip"
    arcpy.analysis.Erase(in_features=TR_UnmoddedTerrain, erase_features=ToothRidge_TrailTread_3_, out_feature_class=TR_UnmoddedClip)

    # Process: Create Random Points (Create Random Points) (management)
    TR_RandomPoints = arcpy.management.CreateRandomPoints(out_path=Tooth_Ridge, out_name="TR_RandomPoints", constraining_feature_class=TR_UnmoddedClip, number_of_points_or_field=10000)[0]

    # Process: Clip Raster (2) (Clip Raster) (management)
    TR_ElevClip = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\TR_ElevClip"
    arcpy.management.Clip(in_raster=ToothRidgeTrail_ElevationToolbox_export_SatAug10153610933470_tif, rectangle="503122.7588 4035056.2128 503235.2265 4035095.2946", out_raster=TR_ElevClip, in_template_dataset=TR_StudyArea, clipping_geometry="ClippingGeometry")
    TR_ElevClip = arcpy.Raster(TR_ElevClip)

    # Process: Extract Values to Points (Extract Values to Points) (sa)
    TR_UnmoddedPoints = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\Tooth_Ridge\\TR_UnmoddedPoints"
    arcpy.sa.ExtractValuesToPoints(TR_RandomPoints, TR_ElevClip, TR_UnmoddedPoints, "INTERPOLATE", "VALUE_ONLY")

    # Process: Kriging (2) (Kriging) (sa)
    TR_UnmoddedSurface = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\TR_UnmoddedSurface"
    Kriging_2_ = TR_UnmoddedSurface
    TR_RasterVariance = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\TR_RasterVariance"
    with arcpy.EnvManager(cellSize="ModelBuilder\\TR_Width:TR_Width", mask="Admin\\TR_StudyArea_Buf_P_M", snapRaster="ModelBuilder\\TR_Width:TR_Width"):
        TR_UnmoddedSurface = arcpy.sa.Kriging(TR_UnmoddedPoints, "RASTERVALU", "Spherical 0.155794 # # #", "CIMPATH=tooth_ridge/tr_elevation_p_m1.json", "VARIABLE 12", TR_RasterVariance)
        TR_UnmoddedSurface.save(Kriging_2_)

        TR_RasterVariance = arcpy.Raster(TR_RasterVariance)

    # Process: Raster Calculator (Raster Calculator) (ia)
    TR_Incision = "F:\\Grad\\Thesis\\Thesis_Working\\thesis_working.gdb\\TR_Incision"
    Raster_Calculator = TR_Incision
    with arcpy.EnvManager(mask="ModelBuilder\\Width\\TR_TreadSmoothed:TR_TreadSmoothed", snapRaster="ModelBuilder\\TR_Width:TR_Width"):
        TR_Incision = TR_UnmoddedSurface - TR_ElevClip
        TR_Incision.save(Raster_Calculator)


    # Process: Reclassify (Reclassify) (sa)
    TR_Incision_Reclass = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\TR_Incision_Reclass"
    Reclassify = TR_Incision_Reclass
    with arcpy.EnvManager(cellSize="MAXOF", snapRaster="ModelBuilder\\TR_Width:TR_Width"):
        TR_Incision_Reclass = arcpy.sa.Reclassify(TR_Incision, "VALUE", "-0.237305 0 1;0 0.100000 2;0.100000 0.300000 3;0.300000 0.500000 4;0.500000 1 5", "DATA")
        TR_Incision_Reclass.save(Reclassify)


if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb", workspace="F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb"):
        TRIncision()
