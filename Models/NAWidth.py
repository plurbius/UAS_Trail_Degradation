# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2025-04-19 13:55:27
"""
import arcpy

def NAWidth():  # NAWidth

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    # Check out any necessary licenses.
    arcpy.CheckOutExtension("Foundation")
    arcpy.CheckOutExtension("Defense")
    arcpy.CheckOutExtension("3D")
    arcpy.CheckOutExtension("spatial")

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")
    Manually_Delineated_Trail_Tread = "NA_TrailTread_P"

    # Process: Smooth Polygon (Smooth Polygon) (cartography)
    Smoothed_Trail_Tread = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\North_Abreu\\NA_TreadSmoothed"
    with arcpy.EnvManager(outputCoordinateSystem="PROJCS[\"NAD_1983_UTM_Zone_13N\",GEOGCS[\"GCS_North_American_1983\",DATUM[\"D_North_American_1983\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-105.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0]]", transferGDBAttributeProperties=False):
        arcpy.cartography.SmoothPolygon(in_features=Manually_Delineated_Trail_Tread, out_feature_class=Smoothed_Trail_Tread, algorithm="PAEK", tolerance="0.5 Meters")

    # Process: Polygon To Centerline (Polygon To Centerline) (topographic)
    Tread_Centerline = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_TreadCenterline1"
    arcpy.topographic.PolygonToCenterline(in_features=Smoothed_Trail_Tread, out_feature_class=Tread_Centerline)

    # Process: Generate Transects Along Lines (Generate Transects Along Lines) (management)
    Tread_Transects = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_TreadTransects"
    arcpy.management.GenerateTransectsAlongLines(in_features=Tread_Centerline, out_feature_class=Tread_Transects, interval="0.5 Meters", transect_length="4 Meters", include_ends="END_POINTS")

    # Process: Clip (Clip) (analysis)
    Tread_Transects_Clip = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_TransectsClip"
    arcpy.analysis.Clip(in_features=Tread_Transects, clip_features=Smoothed_Trail_Tread, out_feature_class=Tread_Transects_Clip)

    # Process: Add Field (Add Field) (management)
    Tread_Transects_Clip_Tread_Length_Field_ = arcpy.management.AddField(in_table=Tread_Transects_Clip, field_name="Trail_Width", field_type="FLOAT")[0]

    # Process: Calculate Field (Calculate Field) (management)
    Tread_Transects_Clip_Tread_Length_ = arcpy.management.CalculateField(in_table=Tread_Transects_Clip_Tread_Length_Field_, field="Trail_Width", expression="!Shape_Length!")[0]

    # Process: Buffer (Buffer) (analysis)
    Transect_Buffer = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_TransectBuffer"
    arcpy.analysis.Buffer(in_features=Tread_Transects_Clip_Tread_Length_, out_feature_class=Transect_Buffer, buffer_distance_or_field="0.5 Meters", line_side="FULL", line_end_type="ROUND", dissolve_option="NONE", method="PLANAR")

    # Process: Polygon to Raster (Polygon to Raster) (conversion)
    Transects_Raster = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_TransectsRaster"
    with arcpy.EnvManager(snapRaster="F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_Incision"):
        arcpy.conversion.PolygonToRaster(in_features=Transect_Buffer, value_field="Trail_Width", out_rasterdataset=Transects_Raster, cell_assignment="CELL_CENTER", priority_field="NONE", cellsize="F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_Incision", build_rat="BUILD")

    # Process: Raster to Point (Raster to Point) (conversion)
    Width_Points = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_Width_Points"
    with arcpy.EnvManager(outputMFlag="Disabled", outputZFlag="Disabled"):
        arcpy.conversion.RasterToPoint(in_raster=Transects_Raster, out_point_features=Width_Points, raster_field="VALUE")

    # Process: Kriging (Kriging) (3d)
    Trail_Tread_Width = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_Width"
    Width_Variance_Table = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\NA_Width_Varianceraster"
    with arcpy.EnvManager(cellSize="MAXOF", mask="NA_TreadSmoothed:NA_TreadSmoothed"):
        arcpy.ddd.Kriging(in_point_features=Width_Points, z_field="GRID_CODE", out_surface_raster=Trail_Tread_Width, semiVariogram_props="Spherical 0.397364 # # #", cell_size="CIMPATH=north_abreu/na_elevation_p_m.json", out_variance_prediction_raster=Width_Variance_Table)
        Trail_Tread_Width = arcpy.Raster(Trail_Tread_Width)
        Width_Variance_Table = arcpy.Raster(Width_Variance_Table)

    # Process: Reclassify (Reclassify) (3d)
    Width_Reclass = "F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb\\WidthReclass"
    arcpy.ddd.Reclassify(in_raster=Trail_Tread_Width, reclass_field="VALUE", remap="0.439649 0.500000 1;0.500000 1 2;1 1.500000 3;1.500000 1.750000 4;1.750000 2.406536 5", out_raster=Width_Reclass)
    Width_Reclass = arcpy.Raster(Width_Reclass)

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb", workspace="F:\\Grad\\Thesis\\Thesis_Working\\Thesis_Working.gdb"):
        NAWidth()
